<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>